<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>